export const index = {
	info: 'Info',
	ticket: 'Fuel',
	game: 'Game',
	overview: 'Overview'
}

export const ticket = {
	hold: 'Balance',
	quickBuy: 'Quick Change',
	needPay: 'Assets To Be Paid',
	receive: 'Fuel Available',
	changeNow: 'Map Now',
	transactionConfirmed: 'Transaction Confirmed',
	exceedingTheMaximumPurchaseQuantity: 'Exceeding The Maximum Purchase Quantity',
	subscriptionRatio: 'Subscription Ratio',
	subscriptionEnd: 'Subscription End',
	pleaseInputETHQuantity: 'Please Input TRX Quantity',
	awardReceived: 'Received',
	withdraw: 'Withdraw',
	buyLog: 'Mapping Records',
	invitLog: 'Invit Record',
	getPriceError: 'Get Price Error',
	getWholesaleError: 'Get Maximum Quantity Error',
	getFPTBalanceError: 'Get FPT Balance Error',
	getInvitBalanceError: 'Get Recode Balance Error',
	getBuyerLogError: 'Get Record Buyer Error',
	getInvitBuyLogError: 'Get Record Invit Error',
	transactionFaild: 'Transaction Faild',
	sendTransactionConfirmed: 'Send Transaction Confirmed',
	surplus: 'Surplus',
	theAddressSendCannotBeYourOwn:'The Address Send Cannot Be Your Own',
	failInSend:'Fail In Send',
	cannotBeEmpty:'Cannot Be Empty',
	insufficientQuantity:'Insufficient Quantity',
	address:'Address',
	num:'Num',
	send:'Send',
	addressOfTheOther:'Address Of The Other',
	quantitySend:'Quantity Send',
	cancel:'Cancel',
	pleaseEnterTheAddressOfTheOtherParty:'Please Enter Address',
	pleaseEnterTheQuantityToSend:'Please Enter Quantity',
	sendLog:'Send Log',
}
export const indexs = {
	fireIsOnDreamsNeverGoOut: 'Fire Is On Dreams, Never Go Out',
	totalSell: 'Total mapping fuel',
	destroyed: 'Burned fuel',
	gameProgress: 'Smart contract trigger progress',
	didNotOpen: 'Did Not Open',
	totalParticipationInTheGame: 'Total admission',
	myInviter: 'My Inviter',
	myInvitationLink: 'My Invitation Link',
	copy: 'Copy',
	beginToCopy: 'Copy Succeeded',
	issue: 'Issue {0}',
}
export const overview = {
	invitationLink: 'Invit Link',
	drawGameRevenue: 'Export Rame Revenue',
	withdrawalOfNodeIncome: 'Withdrawal Of Node Income',
	gameParticipationProgress: 'Game Participation Progress',
	numberOfParticipants: 'Participants Number',
	revenueEarned: 'Revenue Earned',
	revenueCap: 'Revenue Cap',
	reserveFund: 'Reserve Fund',
	numberOfSharedPlayers: 'Shared Players',
	teamParameters: 'Team Parameters',
	gameRevenue: 'Game Revenue',
	shareInTheProfit: 'Share Profit',
	undrawnEarnings: 'Undrawn Earnings',
	gameStatus: 'Game Status',
	noParticipation: 'No Participation',
	prizePool: 'Prize Pool',
	ticketRecords: 'Ticket Records',
	purchaseRecords: 'Mapping Records',
	refundRecord: 'Share Reward Records',
	commissionWithdrawalRecord: 'Distribution records',
	gameRecord: 'Game Record',
	recommendationRecord: 'Recommend Record',
	participationRecord: 'Participation Record',
	winningRecord: 'Winning Record',
	revenueWithdrawalRecord: 'Rvenue Withdrawal Record',
	superNodeRevenueRecord: 'Super player revenue record',
	addressBalance: 'Address Balance',
	withdrawalFailed: 'Withdrawal Failed',
	withdrawalSuccessful: 'Withdrawal Successful',
}
export const game = {
	maximumPurchase: 'Maximum Purchase',
	eachParticipationInEthRequires: 'Participation In Eth',
	jackpot: 'Jackpot',
	prizeDrawingProgress: 'Prize Progress',
	destroyedTicket: 'Value Of Burned Fuel',
	rapidParticipation: 'Rapid Participation',
	numberOfParticipants: 'Participants Number',
	pleaseInputEthQuantity: 'Please Input Eth Quantity',
	instantInvolvement: 'Instant Involvement',
	need: 'Fuel Ratio Required',
	participationRecord: 'Participation Record',
	invitationRecord: 'Invitation Record',
	participation: 'Participation',
	notOpenedYet: 'To Be Triggered',
}
export const event = {
	noData: 'No Data',
	networkError: 'Network Error',
	time: 'Time',
	amount: 'Amount',
	number: 'Number',
	referrer: 'Referrer',
	purchasingPrice: 'Purchasing Price',
	prizePool: 'Prize Pool',
	awards: 'Awards',
	total: 'Total',
	level: 'level',
	reward: 'reward',
}
export const please_use_wallet = 'Please use wallet such as imtoken or metamask to access';
export const switch_lang = 'switch language';
export const notYetOpen = 'Not Yet Open';
export const minimumPurchase = 'Minimum Purchase';
export const waitingForReturn = 'Waiting For Return';
